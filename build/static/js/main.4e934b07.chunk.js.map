{"version":3,"sources":["images/rock.png","images/paper.png","images/scissors.png","Contexts/UserContext.js","Components/Navbar.js","Components/ScoreBoard.js","Components/Result.js","Components/Choices.js","Components/SinglePlayer.js","Components/Connectbtn.js","Components/Multiplayer.js","Components/Errormsg.js","Components/Login.js","Components/Signup.js","Components/Logout.js","App.js","index.js"],"names":["module","exports","userContext","createContext","UserContextProvider","state","user","logstate","updateuser","setState","console","log","Provider","value","userdata","this","props","children","React","Component","Navbar","logginstate","className","to","type","data-toggle","data-target","contextType","Scoreboard","scores","id","username","opponentname","userscore","compscore","Result","resultmsg","resultimages","src","image","alt","Choices","choicelist","choices","map","choice","clickstate","clicked","classname","role","tabIndex","key","onClick","game","onKeyDown","height","SApp","images","rock","paper","scissor","getcomputerchoice","Math","floor","random","getimage","win","userchoice","computerchoice","setTimeout","lose","draw","Connectbtn","btnmsg","sendConnectreq","sendDisConnectreq","MApp","socket","ioconnect","playcounter","loggedinUser","opponentmove","usermove","noofplays","playswon","setupBeforeUnloadListener","window","addEventListener","ev","preventDefault","emit","connectedplayername","setusername","sendMoveAndGame","from","move","on","data","message","connectionstatus","alert","Errormsg","errormsg","Login","password","login","e","fetch","method","credentials","headers","Access","body","JSON","stringify","then","res","json","info","setloggedinUser","setlogstate","history","push","context","Multiplayer","onSubmit","htmlFor","placeholder","name","required","onChange","target","href","Signup","email","errors","handleChange","length","includes","test","validateForm","valid","Object","values","forEach","val","handleSubmit","Accept","msg","catch","err","error","Logout","App","useState","useEffect","status","UserContext","path","component","render","ReactDOM","document","getElementById"],"mappings":"8HAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,kNCE9BC,EAAYC,0BAiCVC,E,2MA9BXC,MAAQ,CACJC,KAAK,KACLC,SAAS,S,EAEZC,WAAW,SAACF,GACLA,EACA,EAAKG,SAAS,CACVH,KAAKA,EACLC,SAAS,WACV,WACEG,QAAQC,IAAI,mBAGXL,GACN,EAAKG,SAAS,CACVH,KAAKA,EACLC,SAAS,W,wEAMjB,OACI,kBAACL,EAAYU,SAAb,CAAsBC,MAAO,CAACC,SAASC,KAAKV,MAAMG,WAAWO,KAAKP,aAC7DO,KAAKC,MAAMC,c,GAzBMC,IAAMC,WCDlCC,E,2MAGJf,MAAQ,CACNgB,YAAY,O,wEAuBZ,OACE,yBAAKC,UAAU,+CACb,yBAAKA,UAAU,oEACb,wBAAIA,UAAU,sBACZ,wBAAIA,UAAU,mBAGZ,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAASC,GAAG,iBAAZ,kBAGJ,wBAAID,UAAU,YACZ,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAASC,GAAG,gBAAZ,iBAGJ,wBAAID,UAAU,YACZ,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAASC,GAAG,YAAZ,eAKR,yBAAKD,UAAU,mBACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAASC,GAAG,iBAAZ,wBAEF,4BACED,UAAU,iBACVE,KAAK,SACLC,cAAY,WACZC,cAAY,mBAEZ,0BAAMJ,UAAU,0BAGpB,yBAAKA,UAAU,yDACb,wBAAIA,UAAU,sBACZ,wBAAIA,UAAU,YACZ,yBAAKA,UAAU,YAEb,kBAAC,IAAD,CAAMC,GAA4B,UAAxBR,KAAKC,MAAMT,SAAuB,SAAW,WAC5B,UAAxBQ,KAAKC,MAAMT,SAAuB,QAAU,YAInD,4BACE,yBAAKe,UAAU,YACb,kBAAC,IAAD,CAASC,GAAG,WAAZ,mB,GA3EKJ,aAAfC,EACGO,YAAczB,EAmFRkB,Q,QCpEAQ,E,iLAhBH,IACAC,EAAWd,KAAKC,MAAhBa,OACR,OACE,yBAAKP,UAAU,cACb,yBAAKQ,GAAG,aAAaR,UAAU,SAC5BP,KAAKC,MAAMe,UAEd,yBAAKD,GAAG,aAAaR,UAAU,SAC5BP,KAAKC,MAAMgB,cAEd,0BAAMF,GAAG,cAAcD,EAAO,GAAGI,WAPnC,IAQE,0BAAMH,GAAG,cAAcD,EAAO,GAAGK,gB,GAZhBhB,IAAMC,WCsBhBgB,E,iLArBH,IACAC,EAAcrB,KAAKC,MAAnBoB,UACAC,EAAiBtB,KAAKC,MAAtBqB,aACR,OACE,yBAAKf,UAAU,UACb,yBAAKA,UAAU,QAAQQ,GAAG,QACxB,mCACA,yBAAKQ,IAAKD,EAAa,GAAGE,MAAOC,IAAI,cAAcV,GAAG,cAExD,yBAAKR,UAAU,QAAQQ,GAAG,WACxB,uBAAGA,GAAG,kBAAkBM,IAE1B,yBAAKd,UAAU,QAAQQ,GAAG,YACxB,uCACA,yBAAKQ,IAAKD,EAAa,GAAGE,MAAOC,IAAI,YAAYV,GAAG,mB,GAfzCZ,IAAMC,WC2BZsB,E,iLA1BH,IAAD,OAKDC,EAJc3B,KAAKC,MAAjB2B,QAImBC,KAAI,SAAAC,GAC7B,IAAMC,EAAaD,EAAOE,QACtBC,EAAYF,GAA0B,SAC1C,OACE,yBACExB,UAAW0B,EACXlB,GAAIe,EAAOf,GACXmB,KAAK,SACLC,SAAS,IACTC,IAAKN,EAAOf,GACZsB,QAAS,kBAAM,EAAKpC,MAAMqC,KAAKR,EAAOf,KACtCwB,UAAW,kBAAM,EAAKtC,MAAMqC,KAAKR,EAAOf,MAExC,yBAAKQ,IAAKO,EAAON,MAAOC,IAAKK,EAAOf,GAAIyB,OAAO,YAIrD,OAAO,yBAAKjC,UAAU,WAAWoB,O,GAvBfxB,IAAMC,W,mDC6KbqC,E,2MAnKbnD,MAAQ,CACNoD,OAAQ,CACN,CAAE3B,GAAI,OAAQS,MAAOmB,IAAMX,SAAS,GACpC,CAAEjB,GAAI,QAASS,MAAOoB,IAAOZ,SAAS,GACtC,CAAEjB,GAAI,UAAWS,MAAOqB,IAASb,SAAS,IAE5ClB,OAAQ,CAAC,CAAEI,UAAW,GAAK,CAAEC,UAAW,IACxCG,aAAc,CACZ,CAAEP,GAAI,OAAQS,MAAOmB,KACrB,CAAE5B,GAAI,QAASS,MAAOoB,MAExBvB,UAAW,UACXL,SAAS,QACTC,aAAa,Y,EAEf6B,kBAAoB,WAGlB,MAFoB,CAAC,OAAQ,QAAS,WACvBC,KAAKC,MAAsB,EAAhBD,KAAKE,Y,EAGjCC,SAAW,SAAApB,GACT,MAAe,SAAXA,EAA0Ba,IACV,UAAXb,EAA2Bc,IAChB,YAAXd,EAA6Be,SAAjC,G,EAEPM,IAAM,SAACC,EAAYC,GACjB,IAAMX,EAAS,EAAKpD,MAAMoD,OAAOb,KAAI,SAAAL,GACnC,OAAIA,EAAMT,KAAOqC,EACR,CAAErC,GAAIS,EAAMT,GAAIS,MAAOA,EAAMA,MAAOQ,QAAS,gBACxCR,KAKVV,EAAS,CACb,CAAEI,UAHqB,EAAK5B,MAAMwB,OAAO,GAAGI,UAGZ,GAChC,CAAEC,UAHqB,EAAK7B,MAAMwB,OAAO,GAAGK,YAMxCG,EAAe,CACnB,CAAEP,GAAIqC,EAAY5B,MAAO,EAAK0B,SAASE,IACvC,CAAErC,GAAIsC,EAAgB7B,MAAO,EAAK0B,SAASG,KAG7C,EAAK3D,SAAS,CACZgD,SACApB,eACAR,SACAO,UALgB,YAOlBiC,YAAW,WACT,IAAMZ,EAAS,EAAKpD,MAAMoD,OAAOb,KAAI,SAAAL,GACnC,OAAIA,EAAMQ,QACD,CAAEjB,GAAIS,EAAMT,GAAIS,MAAOA,EAAMA,MAAOQ,SAAS,GACxCR,KAEhB,EAAK9B,SAAS,CACZgD,aAGD,KACH/C,QAAQC,IAAI,Y,EAEd2D,KAAO,SAACH,EAAYC,GAClB,IAAMX,EAAS,EAAKpD,MAAMoD,OAAOb,KAAI,SAAAL,GACnC,OAAIA,EAAMT,KAAOqC,EACR,CAAErC,GAAIS,EAAMT,GAAIS,MAAOA,EAAMA,MAAOQ,QAAS,cACxCR,KAKVV,EAAS,CACb,CAAEI,UAHqB,EAAK5B,MAAMwB,OAAO,GAAGI,WAI5C,CAAEC,UAHqB,EAAK7B,MAAMwB,OAAO,GAAGK,UAGZ,IAG5BG,EAAe,CACnB,CAAEP,GAAIqC,EAAY5B,MAAO,EAAK0B,SAASE,IACvC,CAAErC,GAAIsC,EAAgB7B,MAAO,EAAK0B,SAASG,KAG7C,EAAK3D,SAAS,CACZgD,SACApB,eACAR,SACAO,UALgB,aAOlBiC,YAAW,WACT,IAAMZ,EAAS,EAAKpD,MAAMoD,OAAOb,KAAI,SAAAL,GACnC,OAAIA,EAAMQ,QACD,CAAEjB,GAAIS,EAAMT,GAAIS,MAAOA,EAAMA,MAAOQ,SAAS,GACxCR,KAEhB,EAAK9B,SAAS,CACZgD,aAED,KACH/C,QAAQC,IAAI,a,EAEd4D,KAAO,SAACJ,EAAYC,GAElB,IAAMX,EAAS,EAAKpD,MAAMoD,OAAOb,KAAI,SAAAL,GACnC,OAAIA,EAAMT,KAAOqC,EACR,CAAErC,GAAIS,EAAMT,GAAIS,MAAOA,EAAMA,MAAOQ,QAAS,eACxCR,KAGVF,EAAe,CACnB,CAAEP,GAAIqC,EAAY5B,MAAO,EAAK0B,SAASE,IACvC,CAAErC,GAAIsC,EAAgB7B,MAAO,EAAK0B,SAASG,KAG7C,EAAK3D,SAAS,CACZgD,SACApB,eACAD,UAJgB,eAMlBiC,YAAW,WACT,IAAMZ,EAAS,EAAKpD,MAAMoD,OAAOb,KAAI,SAAAL,GACnC,OAAIA,EAAMQ,QACD,CAAEjB,GAAIS,EAAMT,GAAIS,MAAOA,EAAMA,MAAOQ,SAAS,GACxCR,KAEhB,EAAK9B,SAAS,CACZgD,aAED,KACH/C,QAAQC,IAAI,S,EAEd0C,KAAO,SAAAc,GACL,IAAMC,EAAiB,EAAKP,oBAE5B,OAAQM,EAAaC,GACnB,IAAK,cACL,IAAK,eACL,IAAK,YACH,EAAKF,IAAIC,EAAYC,GACrB,MACF,IAAK,cACL,IAAK,eACL,IAAK,YACH,EAAKE,KAAKH,EAAYC,GACtB,MACF,QACE,EAAKG,KAAKJ,EAAYC,K,wEAI1B,OACE,yBAAK9C,UAAU,gBAEb,kBAAC,EAAD,CAAYO,OAAQd,KAAKV,MAAMwB,OAAQE,SAAUhB,KAAKV,MAAM0B,SAAUC,aAAcjB,KAAKV,MAAM2B,eAC/F,kBAAC,EAAD,CACEK,aAActB,KAAKV,MAAMgC,aACzBD,UAAWrB,KAAKV,MAAM+B,YAExB,kBAAC,EAAD,CAASO,QAAS5B,KAAKV,MAAMoD,OAAQJ,KAAMtC,KAAKsC,Y,GA9JrClC,a,iBCKJqD,E,iLARP,OACI,yBAAKlD,UAAU,cACX,4BAAQ8B,QAA6B,YAApBrC,KAAKC,MAAMyD,OAAmB1D,KAAKC,MAAM0D,eAAe3D,KAAKC,MAAM2D,mBAAqB5D,KAAKC,MAAMyD,a,GAN3GtD,aCkaVyD,E,2MArZbvE,MAAQ,CAENwE,OAAOC,IAAU,KACjBrB,OAAQ,CACN,CAAE3B,GAAI,OAAQS,MAAOmB,IAAMX,SAAS,GACpC,CAAEjB,GAAI,QAASS,MAAOoB,IAAOZ,SAAS,GACtC,CAAEjB,GAAI,UAAWS,MAAOqB,IAASb,SAAS,IAE5ClB,OAAQ,CAAC,CAAEI,UAAW,GAAK,CAAEC,UAAW,IACxCG,aAAc,CACZ,CAAEP,GAAI,OAAQS,MAAOmB,KACrB,CAAE5B,GAAI,QAASS,MAAOoB,MAExBc,OAAO,UAEPrC,UAAW,4CACX2C,YAAY,EACZhD,SAAS,EAAKf,MAAMgE,aACpBhD,aAAa,GACbiD,aAAa,GACbC,SAAS,GACTC,UAAU,EACVC,SAAS,G,EAEXC,0BAA4B,WAC1BC,OAAOC,iBAAiB,gBAAgB,SAACC,GACrCA,EAAGC,iBACH,EAAKpF,MAAMwE,OAAOa,KAAK,yBAAyB,CAC9C3D,SAAS,EAAK1B,MAAM0B,SACpB4D,oBAAoB,EAAKtF,MAAM2B,mB,EAItC4D,YAAY,a,EAkGblB,eAAe,WAEb,EAAKrE,MAAMwE,OAAOa,KAAK,8BAA8B,CAEnD3D,SAAS,EAAK1B,MAAM0B,WAEtB,EAAKtB,SAAS,CACZ2B,UAAU,sC,EAKduC,kBAAkB,WAEhB,EAAKtE,MAAMwE,OAAOa,KAAK,yBAAyB,CAC9C3D,SAAS,EAAK1B,MAAM0B,SACpB4D,oBAAoB,EAAKtF,MAAM2B,eAEjC,EAAKvB,SAAS,CACZgE,OAAO,a,EAGXZ,kBAAoB,WAGlB,MAFoB,CAAC,OAAQ,QAAS,WACvBC,KAAKC,MAAsB,EAAhBD,KAAKE,Y,EAGjCC,SAAW,SAAApB,GACT,MAAe,SAAXA,EAA0Ba,IACV,UAAXb,EAA2Bc,IAChB,YAAXd,EAA6Be,SAAjC,G,EAEPM,IAAM,SAACC,EAAYC,GACjB,IAAMX,EAAS,EAAKpD,MAAMoD,OAAOb,KAAI,SAAAL,GACnC,OAAIA,EAAMT,KAAOqC,EACR,CAAErC,GAAIS,EAAMT,GAAIS,MAAOA,EAAMA,MAAOQ,QAAS,gBACxCR,KAKVV,EAAS,CACb,CAAEI,UAHqB,EAAK5B,MAAMwB,OAAO,GAAGI,UAGZ,GAChC,CAAEC,UAHqB,EAAK7B,MAAMwB,OAAO,GAAGK,YAMxCG,EAAe,CACnB,CAAEP,GAAIqC,EAAY5B,MAAO,EAAK0B,SAASE,IACvC,CAAErC,GAAIsC,EAAgB7B,MAAO,EAAK0B,SAASG,KAE7C,EAAK3D,SAAS,CACZgD,SACApB,eACAR,WACA,WACA,GAAG,EAAKxB,MAAMwB,OAAO,GAAGI,WAAW,EAAE,CAErC,EAAKxB,SAAS,CACZ2E,SAAS,EAAK/E,MAAM+E,SAAS,EAC7BvD,OAAQ,CAAC,CAAEI,UAAW,GAAK,CAAEC,UAAW,IACxCE,UAJkB,qBAKlB+C,UAAU,EAAK9E,MAAM8E,UAAU,QAG7B,CAEJ,EAAK1E,SAAS,CACZ2B,UAFkB,gBAStBiC,YAAW,WACT,IAAMZ,EAAS,EAAKpD,MAAMoD,OAAOb,KAAI,SAAAL,GACnC,OAAIA,EAAMQ,QACD,CAAEjB,GAAIS,EAAMT,GAAIS,MAAOA,EAAMA,MAAOQ,SAAS,GACxCR,KAEhB,EAAK9B,SAAS,CACZgD,aAGD,M,EAGLa,KAAO,SAACH,EAAYC,GAClB,IAAMX,EAAS,EAAKpD,MAAMoD,OAAOb,KAAI,SAAAL,GACnC,OAAIA,EAAMT,KAAOqC,EACR,CAAErC,GAAIS,EAAMT,GAAIS,MAAOA,EAAMA,MAAOQ,QAAS,cACxCR,KAKVV,EAAS,CACb,CAAEI,UAHqB,EAAK5B,MAAMwB,OAAO,GAAGI,WAI5C,CAAEC,UAHqB,EAAK7B,MAAMwB,OAAO,GAAGK,UAGZ,IAG5BG,EAAe,CACnB,CAAEP,GAAIqC,EAAY5B,MAAO,EAAK0B,SAASE,IACvC,CAAErC,GAAIsC,EAAgB7B,MAAO,EAAK0B,SAASG,KAE7C,EAAK3D,SAAS,CACZoB,SACA4B,SACApB,iBACA,WACA,GAAG,EAAKhC,MAAMwB,OAAO,GAAGK,WAAW,EAAE,CAErC,EAAKzB,SAAS,CACZ0E,UAAU,EAAK9E,MAAM8E,UAAU,EAC/BtD,OAAQ,CAAC,CAAEI,UAAW,GAAK,CAAEC,UAAW,IACxCE,UAJkB,4BAOhB,CAGJ,EAAK3B,SAAS,CACZ2B,UAFkB,iBAStBiC,YAAW,WACT,IAAMZ,EAAS,EAAKpD,MAAMoD,OAAOb,KAAI,SAAAL,GACnC,OAAIA,EAAMQ,QACD,CAAEjB,GAAIS,EAAMT,GAAIS,MAAOA,EAAMA,MAAOQ,SAAS,GACxCR,KAEhB,EAAK9B,SAAS,CACZgD,aAED,M,EAGLc,KAAO,SAACJ,EAAYC,GAElB,IAAMX,EAAS,EAAKpD,MAAMoD,OAAOb,KAAI,SAAAL,GACnC,OAAIA,EAAMT,KAAOqC,EACR,CAAErC,GAAIS,EAAMT,GAAIS,MAAOA,EAAMA,MAAOQ,QAAS,eACxCR,KAGVF,EAAe,CACnB,CAAEP,GAAIqC,EAAY5B,MAAO,EAAK0B,SAASE,IACvC,CAAErC,GAAIsC,EAAgB7B,MAAO,EAAK0B,SAASG,KAG7C,EAAK3D,SAAS,CACZgD,SACApB,eACAD,UAJgB,eAMlBiC,YAAW,WACT,IAAMZ,EAAS,EAAKpD,MAAMoD,OAAOb,KAAI,SAAAL,GACnC,OAAIA,EAAMQ,QACD,CAAEjB,GAAIS,EAAMT,GAAIS,MAAOA,EAAMA,MAAOQ,SAAS,GACxCR,KAEhB,EAAK9B,SAAS,CACZgD,aAED,M,EAGLoC,gBAAkB,SAAA1B,GAEhB,EAAK9D,MAAMwE,OAAOa,KAAK,aAAa,CAClCI,KAAK,EAAKzF,MAAM0B,SAChBR,GAAG,EAAKlB,MAAM2B,aACd+D,KAAK5B,IAIP,EAAK1D,SAAS,CACZyE,SAASf,IAGR,EAAK9D,MAAM4E,cACZ,EAAK5B,KAAKc,GAIV,EAAK1D,SAAS,CACZyE,SAAS,GACTD,aAAa,MA8Bf,EAAKxE,SAAS,CACZ2B,UAAU,8B,EAIhBiB,KAAK,SAACc,GACJ,IAAIC,EAAiB,EAAK/D,MAAM4E,aAGhC,OAAQd,EAAaC,GACnB,IAAK,cACL,IAAK,eACL,IAAK,YACH,EAAKF,IAAIC,EAAYC,GACrB,MACF,IAAK,cACL,IAAK,eACL,IAAK,YACH,EAAKE,KAAKH,EAAYC,GACtB,MACF,QACE,EAAKG,KAAKJ,EAAYC,K,mFAhVR,IAAD,OAEjB1D,QAAQC,IAAI,uBACZI,KAAKsE,4BAEHtE,KAAKV,MAAM0B,UAEXhB,KAAKV,MAAMwE,OAAOa,KAAK,wBAAwB,CAC7C3D,SAAShB,KAAKV,MAAM0B,WAGzBhB,KAAKV,MAAMwE,OAAOmB,GAAG,YAAW,SAACC,GAE3BA,EAAKC,SACN,EAAKzF,SAAS,CACZ2B,UAAU6D,EAAKC,aAKtBnF,KAAKV,MAAMwE,OAAOmB,GAAG,kBAAiB,SAACC,GAErC,EAAKxF,SAAS,CACZuB,aAAaiE,EAAKjE,aAClBI,UAAU,gBAAD,OAAiB6D,EAAKjE,aAAtB,mBACTyC,OAAO,kBAGX1D,KAAKV,MAAMwE,OAAOmB,GAAG,sBAAqB,SAACC,GAEzC,EAAKxF,SAAS,CACZ2B,UAAU,GAAD,OAAI6D,EAAKC,QAAT,oBAA4B,EAAK7F,MAAM+E,SAAvC,mBAA0D,EAAK/E,MAAM8E,UAArE,WACTV,OAAO,UACPzC,aAAa,GACboD,SAAS,EACTD,UAAU,OAGdpE,KAAKV,MAAMwE,OAAOmB,GAAG,gBAAe,SAACC,GAKpC,EAAKxF,SAAS,CACZwE,aAAagB,EAAKF,OAGjB,EAAK1F,MAAM6E,UAEZ,EAAK7B,KAAK,EAAKhD,MAAM6E,UAGrB,EAAKzE,SAAS,CACZyE,SAAS,GACTD,aAAa,MA4Bf,EAAKxE,SAAS,CACZ2B,UAAU,4D,6CAMdrB,KAAKV,MAAMwE,OAAOa,KAAK,yBAAyB,CAC9C3D,SAAShB,KAAKV,MAAM0B,SACpB4D,oBAAoB5E,KAAKV,MAAM2B,iB,+BA0PjC,OADAjB,KAAK6E,cACD7E,KAAKV,MAAM0B,SASb,yBAAKT,UAAU,eAEbP,KAAKV,MAAM2B,aAAc,6BACxB,kBAAC,EAAD,CAAYH,OAAQd,KAAKV,MAAMwB,OAAQG,aAAcjB,KAAKV,MAAM2B,aAAcD,SAAUhB,KAAKV,MAAM0B,WACpG,kBAAC,EAAD,CACEM,aAActB,KAAKV,MAAMgC,aACzBD,UAAWrB,KAAKV,MAAM+B,YAExB,kBAAC,EAAD,CAASO,QAAS5B,KAAKV,MAAMoD,OAAQ0C,iBAAkBpF,KAAKV,MAAM8F,iBAAkB9C,KAAMtC,KAAK8E,kBAC/F,kBAAC,EAAD,CAAYnB,eAAgB3D,KAAK2D,eAAgBG,OAAQ9D,KAAKV,MAAMwE,OAAQF,kBAAmB5D,KAAK4D,kBAAmBF,OAAQ1D,KAAKV,MAAMoE,UACjI,yBAAKnD,UAAU,cAAa,2BAAIP,KAAKV,MAAM+B,WAAc,kBAAC,EAAD,CAAYsC,eAAgB3D,KAAK2D,eAAgBC,kBAAmB5D,KAAK4D,kBAAmBF,OAAQ1D,KAAKV,MAAMoE,YAhBnL2B,MAAM,oCACG,kBAAC,IAAD,CAAU7E,GAAG,gB,GAjYTJ,aCDJkF,E,iLARP,OACI,yBAAK/E,UAAU,YACf,2BAAIP,KAAKC,MAAMsF,e,GALJnF,aC0IRoF,E,2MAtIblG,MAAQ,CACN0B,SAAU,GACVyE,SAAU,GACVF,SAAU,I,EA4BZG,MAAQ,SAAAC,GACNA,EAAEjB,iBAGFkB,MAAM,eAAgB,CACpBC,OAAQ,OACRC,YAAa,UACbC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBnF,SAAU,EAAK1B,MAAM0B,SACrByE,SAAU,EAAKnG,MAAMmG,aAEtBW,MAAK,SAAAC,GACNA,EAAIC,OAAOF,MAAK,SAAAE,GACVA,IACF3G,QAAQC,IAAI0G,GACRA,EAAKC,KACP,EAAK7G,SAAS,CACZ6F,SAAUe,EAAKC,KAAKpB,UAEbmB,EAAK/G,OACf,EAAKU,MAAMuG,gBAAgBF,EAAK/G,MAChC,EAAKU,MAAMwG,YAAY,UAEvB,EAAKxG,MAAMyG,QAAQC,KAAK,yB,mFA7B/BhH,QAAQC,IAAI,mB,+BAoCJ,IAAD,OAEP,OADiBI,KAAK4G,QAAdrH,KA+DC,kBAACsH,EAAD,MA5DL,yBAAKtG,UAAU,SACb,0BAAMuG,SAAU9G,KAAK0F,OACnB,yBAAKnF,UAAU,aACb,2BAAOwG,QAAQ,SACb,wCAEF,2BACEtG,KAAK,OACLX,MAAOE,KAAKV,MAAM0B,SAClBgG,YAAY,iBACZC,KAAK,QACLC,UAAQ,EACRC,SAAU,SAAAxB,GACR,EAAKjG,SAAS,CAAEsB,SAAU2E,EAAEyB,OAAOtH,WAIvC,2BAAOiH,QAAQ,OACb,wCAEF,2BACEtG,KAAK,WACLX,MAAOE,KAAKV,MAAMmG,SAClBuB,YAAY,iBACZC,KAAK,MACLC,UAAQ,EACRC,SAAU,SAAAxB,GACR,EAAKjG,SAAS,CAAE+F,SAAUE,EAAEyB,OAAOtH,WAIvC,4BAAQW,KAAK,UAAb,SACCT,KAAKV,MAAMiG,SACV,kBAAC,EAAD,CAAUA,SAAUvF,KAAKV,MAAMiG,WAE/B,GAEF,+BACE,2BAAO9E,KAAK,WAAWwG,KAAK,aAD9B,iBAKF,yBAAK1G,UAAU,aACb,4BACEE,KAAK,SACLF,UAAU,YACV8B,QAAS,WACP,EAAKpC,MAAMyG,QAAQC,KAAK,mBAJ5B,UASA,0BAAMpG,UAAU,OACd,uBAAG8G,KAAK,QAAR,4B,GA3HIjH,a,QCmMLkH,E,2MApMbhI,MAAQ,CACN0B,SAAU,GACViG,KAAM,GACNxB,SAAU,GACV8B,MAAO,GACPC,OAAQ,CACNP,KAAM,GACNjG,SAAU,GACVuG,MAAO,GACP9B,SAAU,K,EAGdgC,aAAe,SAAA9B,GACbA,EAAEjB,iBADgB,MAEMiB,EAAEyB,OAAlBH,EAFU,EAEVA,KAAMnH,EAFI,EAEJA,MACR0H,EAAS,EAAKlI,MAAMkI,OAE1B,OAAQP,GACN,IAAK,OACHO,EAAOP,KACLnH,EAAM4H,OAAS,EAAI,yCAA2C,GAChE,MACF,IAAK,WACHF,EAAOxG,SAAWlB,EAAM6H,SAAS,KAC7B,yCACA,GACJ,MACF,IAAK,QACHH,EAAOD,MAAQ,yHAAyHK,KACtI9H,GAEE,GACA,8BACJ,MACF,IAAK,WACH0H,EAAO/B,SACL3F,EAAM4H,OAAS,EAAI,qCAAuC,GAKhE,EAAKhI,SAAL,aAAgB8H,UAASP,EAAOnH,K,EAElC+H,aAAe,SAAAL,GACb,IAAIM,GAAQ,EAEZ,OADAC,OAAOC,OAAOR,GAAQS,SAAQ,SAAAC,GAAG,OAAIA,EAAIR,OAAS,IAAMI,GAAQ,MACzDA,G,EAGTK,aAAe,SAAAxC,GAAM,IAAD,EAC0B,EAAKrG,MAAzC0B,EADU,EACVA,SAAUiG,EADA,EACAA,KAAMxB,EADN,EACMA,SAAU8B,EADhB,EACgBA,MAGlC,GAFA5B,EAAEjB,iBACF/E,QAAQC,IAAI,EAAKN,QACb,EAAKuI,aAAa,EAAKvI,MAAMkI,QAwC/B,OAAO,EAvCP5B,MAAM,gBAAiB,CACrBC,OAAQ,OACRE,QAAS,CACPqC,OAAQ,mBACR,eAAgB,oBAElBnC,KAAMC,KAAKC,UAAU,CACnBc,KAAMA,EACNxB,SAAUA,EACVzE,SAAUA,EACVuG,MAAOA,MAGRnB,MAAK,SAAAC,GACJA,EAAIC,OAAOF,MAAK,SAAAE,GACd,GAAiB,YAAbA,EAAK+B,IAGP,OAFA1I,QAAQC,IAAI,QACZ,EAAKK,MAAMyG,QAAQC,KAAK,kBACjB,EAGT,GAAIL,EAAKkB,OAAOD,MAAO,CACrB,IAAMC,EAAS,EAAKlI,MAAMkI,OAC1BA,EAAOD,MAAQjB,EAAKkB,OAAOD,MAC3B,EAAK7H,SAAS,CACZ8H,WAGJ,GAAIlB,EAAKkB,OAAOxG,SAAU,CACxB,IAAMwG,EAAS,EAAKlI,MAAMkI,OAC1BA,EAAOxG,SAAWsF,EAAKkB,OAAOxG,SAC9B,EAAKtB,SAAS,CACZ8H,kBAKPc,OAAM,SAAAC,GAAG,OAAI5I,QAAQC,IAAI2I,O,wEAKtB,IAAD,OACCf,EAAWxH,KAAKV,MAAhBkI,OAER,OACE,yBAAKjH,UAAU,UACb,0BAAMuG,SAAU9G,KAAKmI,cACnB,yBAAK5H,UAAU,aACb,sCACA,2BAAOwG,QAAQ,SACb,uCACA,8BAEF,2BACEtG,KAAK,OACLuG,YAAY,iBACZC,KAAK,WACLC,UAAQ,EACRC,SAAU,SAAAxB,GACR,EAAK8B,aAAa9B,MAGrB6B,EAAOxG,SAAS0G,OAAS,GACxB,0BAAMnH,UAAU,SAASiH,EAAOxG,UAElC,6BACA,2BAAO+F,QAAQ,QACb,oCAEF,2BACEtG,KAAK,OACLuG,YAAY,aACZC,KAAK,OACLC,UAAQ,EACRC,SAAU,SAAAxB,GACR,EAAK8B,aAAa9B,MAGrB6B,EAAOP,KAAKS,OAAS,GACpB,0BAAMnH,UAAU,SAASiH,EAAOP,MAElC,6BACA,2BAAOF,QAAQ,SACb,qCAEF,2BACEtG,KAAK,OACLuG,YAAY,cACZC,KAAK,QACLC,UAAQ,EACRC,SAAU,SAAAxB,GACR,EAAK8B,aAAa9B,MAGrB6B,EAAOD,MAAMG,OAAS,GACrB,0BAAMnH,UAAU,SAASiH,EAAOD,OAElC,6BACA,2BAAOR,QAAQ,OACb,wCAEF,2BACEtG,KAAK,WACLuG,YAAY,iBACZC,KAAK,WACLC,UAAQ,EACRC,SAAU,SAAAxB,GACR,EAAK8B,aAAa9B,MAGrB6B,EAAO/B,SAASiC,OAAS,GACxB,0BAAMnH,UAAU,SAASiH,EAAO/B,UAGlC,4BAAQhF,KAAK,UAAb,WAEDT,KAAKV,MAAMiG,SACRvF,KAAKV,MAAMiG,SAAS1D,KAAI,SAAA2G,GACtB,OAAO,kBAAC,EAAD,CAAUjD,SAAUiD,EAAOpG,IAAqB,GAAhBW,KAAKE,cAE9C,GACJ,yBAAK1C,UAAU,aACb,4BACEE,KAAK,SACLF,UAAU,YACV8B,QAAS,WACP,EAAKpC,MAAMyG,QAAQC,KAAK,mBAJ5B,UASA,0BAAMpG,UAAU,OACd,uBAAG8G,KAAK,SAAR,0C,GA5LOjH,aCqCNqI,E,4LAnCS,IAAD,OAEf7C,MAAM,gBAAiB,CAEnBE,YAAa,UACbC,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAMjBI,MAAK,SAAAC,GACJA,EAAIC,OACHF,MAAK,SAAAE,GACCA,GACgB,cAAZA,EAAKC,OACJ5G,QAAQC,IAAI,YACZ,EAAKK,MAAMuG,gBAAgB,MAC9B,EAAKvG,MAAMwG,YAAY,SACvB,EAAKxG,MAAMyG,QAAQC,KAAK,2B,+BAQvC,OACI,8C,GAhCSxG,IAAMC,WCyDZsI,MAlDf,WAAgB,IAAD,EACwBC,mBAAS,MADjC,mBACN1E,EADM,KACOuC,EADP,OAEgBmC,mBAAS,SAFzB,mBAENnJ,EAFM,KAEGiH,EAFH,KA8Bb,OA3BCmC,qBAAU,WACRjJ,QAAQC,IAAI,eACZgG,MAAM,eAAgB,CACrBC,OAAQ,OACRC,YAAa,UACbC,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAMjBI,MAAK,SAAAC,GACN,OAAOA,EAAIC,UACVF,MAAK,SAAAE,GACFA,GACgB,MAAdA,EAAKuC,SACNlJ,QAAQC,IAAI0G,GACZE,EAAgBF,EAAK/G,MACrBI,QAAQC,IAAI,yBAEZ6G,EAAY,gBAIlB,IAGD,yBAAKlG,UAAU,OAET,kBAAC,IAAD,KACA,kBAACuI,EAAD,KACA,kBAAC,EAAD,CAAQtJ,SAAUA,IAClB,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOuJ,KAAK,gBAAgBC,UAAWvG,IACvC,kBAAC,IAAD,CAAOsG,KAAK,SAASE,OAAQ,SAAChJ,GAAD,OAAU,kBAAC,EAAD,iBAAWA,EAAX,CAAkBgE,aAAcA,EAAcuC,gBAAiBA,EAAiBhH,SAAUA,EAAUiH,YAAaA,QACxJ,kBAAC,IAAD,CAAOsC,KAAK,UAAUC,UAAW1B,IACjC,kBAAC,IAAD,CAAOyB,KAAK,UAAUE,OAAQ,SAAChJ,GAAD,OAAU,kBAAC,EAAD,iBAAYA,EAAZ,CAAmBwG,YAAaA,EAAaD,gBAAiBA,QACtG,kBAAC,IAAD,CAAOuC,KAAK,eAAeE,OAAQ,SAAChJ,GAAD,OAAU,kBAAC,EAAD,iBAAUA,EAAV,CAAiBgE,aAAcA,EAAaA,EAAajD,SAAS,gBChDzHkI,IAASD,OAAO,kBAAC,EAAD,MAASE,SAASC,eAAe,W","file":"static/js/main.4e934b07.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rock.a94e17c0.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.b7445e2a.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.0af33929.png\";","import React,{createContext} from 'react';\n\nexport const userContext=createContext()\n\nclass UserContextProvider extends React.Component {\n    state = { \n        user:null,\n        logstate:'login'\n     }\n     updateuser=(user)=>{\n         if(user){\n            this.setState({\n                user:user,\n                logstate:'logout'\n             },()=>{\n                 console.log(\"updated user\")\n             })\n         }\n         else if(!user){\n            this.setState({\n                user:user,\n                logstate:'login'\n             })\n         }\n      \n     }\n    render() { \n        return ( \n            <userContext.Provider value={{userdata:this.state,updateuser:this.updateuser}}>\n                {this.props.children}\n            </userContext.Provider>\n         );\n    }\n}\n \nexport default UserContextProvider;\n\n","import React, { Component } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { userContext } from \"../Contexts/UserContext\";\nclass Navbar extends Component {\n  static contextType = userContext;\n\n  state = {\n    logginstate:'fdf'\n  };\n  // componentDidMount(){\n  //   const { logstate } = this.context;\n  //   this.setState({\n  //     logginstate:logstate\n  //   })\n  // }\n  render() {\n   // const {logstate}=this.context\n    //console.log(logstate)\n\n    // if(user){\n    //   this.setState({\n    //     logginstate:\"logout\"\n    //   })\n\n    // }\n    // else{\n    //   this.setState({\n    //     logginstate:'login'\n    //   })\n    // }\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n        <div className=\"navbar-collapse collapse w-100 order-1 order-md-0 dual-collapse2\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              {/* <a className=\"nav-link\" href=\"/singleplayer\">Singleplayer</a> */}\n              {/* <NavLink to=\"/singleplayer\">Singleplayer</NavLink> */}\n              <div className=\"nav-link\">\n                <NavLink to=\"/singleplayer\">Singleplayer</NavLink>\n              </div>\n            </li>\n            <li className=\"nav-item\">\n              <div className=\"nav-link\">\n                <NavLink to=\"/Multiplayer\">Multiplayer</NavLink>\n              </div>\n            </li>\n            <li className=\"nav-item\">\n              <div className=\"nav-link\">\n                <NavLink to=\"/Friends\">Friends</NavLink>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div className=\"mx-auto order-0\">\n          <div className=\"nav-link-center\">\n            <NavLink to=\"/singleplayer\">ROCK,PAPER,SCISSORS</NavLink>\n          </div>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\".dual-collapse2\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n        </div>\n        <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <div className=\"nav-link\">\n                {/* <Link to=\"/login\">{this.state.loginState}</Link> */}\n                <Link to={this.props.logstate === \"login\" ? \"/login\" : \"/logout\"}>\n                  {this.props.logstate === \"login\" ? \"login\" : \"logout\"}\n                </Link>\n              </div>\n            </li>\n            <li>\n              <div className=\"nav-link\">\n                <NavLink to=\"/signup\">Signup</NavLink>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\nexport default Navbar;\n","import React from \"react\";\n\nclass Scoreboard extends React.Component {\n  render() {\n    const { scores } = this.props;\n    return (\n      <div className=\"scoreboard\">\n        <div id=\"user-label\" className=\"badge\">\n          {this.props.username}\n        </div>\n        <div id=\"comp-label\" className=\"badge\">\n          {this.props.opponentname}\n        </div>\n        <span id=\"user-score\">{scores[0].userscore}</span>:\n        <span id=\"comp-score\">{scores[1].compscore}</span>\n      </div>\n    );\n  }\n}\nexport default Scoreboard;\n","import React from \"react\";\n\nclass Result extends React.Component {\n  render() {\n    const { resultmsg } = this.props;\n    const { resultimages } = this.props;\n    return (\n      <div className=\"result\">\n        <div className=\"elem1\" id=\"user\">\n          <p>User</p>\n          <img src={resultimages[0].image} alt=\"resultimage\" id=\"user-img\" />\n        </div>\n        <div className=\"elem1\" id=\"welcome\">\n          <p id=\"result-message\">{resultmsg}</p>\n        </div>\n        <div className=\"elem1\" id=\"computer\">\n          <p>Computer</p>\n          <img src={resultimages[1].image} alt=\"compimage\" id=\"comp-img\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Result;\n","import React from \"react\";\n\nclass Choices extends React.Component {\n  render() {\n    const { choices } = this.props;\n\n    //console.log(this.props)\n    //console.log(choices)\n    const choicelist = choices.map(choice => {\n      const clickstate = choice.clicked;\n      var classname = clickstate ? clickstate : \"choice\";\n      return (\n        <div\n          className={classname}\n          id={choice.id}\n          role=\"button\"\n          tabIndex=\"0\"\n          key={choice.id}\n          onClick={() => this.props.game(choice.id)}\n          onKeyDown={() => this.props.game(choice.id)}\n        >\n          <img src={choice.image} alt={choice.id} height=\"100\" />\n        </div>\n      );\n    });\n    return <div className=\"choices\">{choicelist}</div>;\n  }\n}\n\nexport default Choices;\n","\nimport React, { Component } from \"react\";\n//import {BrowserRouter} from \"react-router-dom\"\n\nimport Scoreboard from \"./ScoreBoard\";\nimport Result from \"./Result\";\nimport Choices from \"./Choices\";\nimport rock from \"../images/rock.png\";\nimport scissor from \"../images/scissors.png\";\nimport paper from \"../images/paper.png\";\n\nclass SApp extends Component {\n  state = {\n    images: [\n      { id: \"rock\", image: rock, clicked: false },\n      { id: \"paper\", image: paper, clicked: false },\n      { id: \"scissor\", image: scissor, clicked: false }\n    ],\n    scores: [{ userscore: 0 }, { compscore: 0 }],\n    resultimages: [\n      { id: \"rock\", image: rock },\n      { id: \"paper\", image: paper }\n    ],\n    resultmsg: \"welcome\",\n    username:'alvin',\n    opponentname:'computer'\n  };\n  getcomputerchoice = () => {\n    const choicearray = [\"rock\", \"paper\", \"scissor\"];\n    const choice = Math.floor(Math.random() * 3);\n    return choicearray[choice];\n  };\n  getimage = choice => {\n    if (choice === \"rock\") return rock;\n    else if (choice === \"paper\") return paper;\n    else if (choice === \"scissor\") return scissor;\n  };\n  win = (userchoice, computerchoice) => {\n    const images = this.state.images.map(image => {\n      if (image.id === userchoice) {\n        return { id: image.id, image: image.image, clicked: \"choice-green\" };\n      } else return image;\n    });\n\n    const currentuserscore = this.state.scores[0].userscore;\n    const currentcompscore = this.state.scores[1].compscore;\n    const scores = [\n      { userscore: currentuserscore + 1 },\n      { compscore: currentcompscore }\n    ];\n\n    const resultimages = [\n      { id: userchoice, image: this.getimage(userchoice) },\n      { id: computerchoice, image: this.getimage(computerchoice) }\n    ];\n    const resultmsg = \"YOU WIN\";\n    this.setState({\n      images,\n      resultimages,\n      scores,\n      resultmsg\n    });\n    setTimeout(() => {\n      const images = this.state.images.map(image => {\n        if (image.clicked) {\n          return { id: image.id, image: image.image, clicked: false };\n        } else return image;\n      });\n      this.setState({\n        images\n      });\n      //console.log(images)\n    }, 400);\n    console.log(\"you win\");\n  };\n  lose = (userchoice, computerchoice) => {\n    const images = this.state.images.map(image => {\n      if (image.id === userchoice) {\n        return { id: image.id, image: image.image, clicked: \"choice-red\" };\n      } else return image;\n    });\n\n    const currentuserscore = this.state.scores[0].userscore;\n    const currentcompscore = this.state.scores[1].compscore;\n    const scores = [\n      { userscore: currentuserscore },\n      { compscore: currentcompscore + 1 }\n    ];\n\n    const resultimages = [\n      { id: userchoice, image: this.getimage(userchoice) },\n      { id: computerchoice, image: this.getimage(computerchoice) }\n    ];\n    const resultmsg = \"YOU LOSE\";\n    this.setState({\n      images,\n      resultimages,\n      scores,\n      resultmsg\n    });\n    setTimeout(() => {\n      const images = this.state.images.map(image => {\n        if (image.clicked) {\n          return { id: image.id, image: image.image, clicked: false };\n        } else return image;\n      });\n      this.setState({\n        images\n      });\n    }, 400);\n    console.log(\"you lose\");\n  };\n  draw = (userchoice, computerchoice) => {\n    //console.log(e.classList)\n    const images = this.state.images.map(image => {\n      if (image.id === userchoice) {\n        return { id: image.id, image: image.image, clicked: \"choice-grey\" };\n      } else return image;\n    });\n\n    const resultimages = [\n      { id: userchoice, image: this.getimage(userchoice) },\n      { id: computerchoice, image: this.getimage(computerchoice) }\n    ];\n    const resultmsg = \"ITS A DRAW\";\n    this.setState({\n      images,\n      resultimages,\n      resultmsg\n    });\n    setTimeout(() => {\n      const images = this.state.images.map(image => {\n        if (image.clicked) {\n          return { id: image.id, image: image.image, clicked: false };\n        } else return image;\n      });\n      this.setState({\n        images\n      });\n    }, 400);\n    console.log(\"draw\");\n  };\n  game = userchoice => {\n    const computerchoice = this.getcomputerchoice();\n\n    switch (userchoice + computerchoice) {\n      case \"rockscissor\":\n      case \"scissorpaper\":\n      case \"paperrock\":\n        this.win(userchoice, computerchoice);\n        break;\n      case \"scissorrock\":\n      case \"paperscissor\":\n      case \"rockpaper\":\n        this.lose(userchoice, computerchoice);\n        break;\n      default:\n        this.draw(userchoice, computerchoice);\n    }\n  };\n  render() {\n    return (\n      <div className=\"Singleplayer\">\n     \n        <Scoreboard scores={this.state.scores} username={this.state.username} opponentname={this.state.opponentname} />\n        <Result\n          resultimages={this.state.resultimages}\n          resultmsg={this.state.resultmsg}\n        />\n        <Choices choices={this.state.images} game={this.game} />\n      </div>\n    );\n  }\n}\n\nexport default SApp;\n","import React,{Component} from 'react';\n//import ioconnect from \"socket.io-client\"\n\n\nclass Connectbtn extends Component {\n\n    render() { \n\n        return ( \n            <div className=\"connectbtn\">\n                <button onClick={this.props.btnmsg==='CONNECT'?this.props.sendConnectreq:this.props.sendDisConnectreq} >{this.props.btnmsg}</button>\n            </div>\n         );\n    }\n}\n \nexport default Connectbtn;","\nimport React, { Component } from \"react\";\n//import {BrowserRouter} from \"react-router-dom\"\n//import userContext from \"../Contexts/UserContext\"\nimport ioconnect from \"socket.io-client\"\nimport Scoreboard from \"./ScoreBoard\";\nimport Result from \"./Result\";\nimport Choices from \"./Choices\";\nimport rock from \"../images/rock.png\";\nimport scissor from \"../images/scissors.png\";\nimport paper from \"../images/paper.png\";\nimport Connectbtn from \"../Components/Connectbtn\"\nimport {Redirect} from \"react-router-dom\"\n\nclass MApp extends Component {\n  \n \n  state = {\n    \n    socket:ioconnect(\"/\"),\n    images: [\n      { id: \"rock\", image: rock, clicked: false },\n      { id: \"paper\", image: paper, clicked: false },\n      { id: \"scissor\", image: scissor, clicked: false }\n    ],\n    scores: [{ userscore: 0 }, { compscore: 0 }],\n    resultimages: [\n      { id: \"rock\", image: rock },\n      { id: \"paper\", image: paper }\n    ],\n    btnmsg:\"CONNECT\",\n \n    resultmsg: \"please connect to player to start playing\",\n    playcounter:0,\n    username:this.props.loggedinUser,\n    opponentname:\"\",\n    opponentmove:\"\",\n    usermove:\"\",\n    noofplays:0,\n    playswon:0\n  };\n  setupBeforeUnloadListener = () => {\n    window.addEventListener(\"beforeunload\", (ev) => {\n        ev.preventDefault();\n        this.state.socket.emit(\"disconnectUserFromPlay\",{\n          username:this.state.username,\n          connectedplayername:this.state.opponentname\n        })\n    });\n};\n   setusername=()=>{\n  //console.log(this.state.username)\n   }\n  \n  componentDidMount(){\n    \n    console.log(\"multiplayer mounted\")\n    this.setupBeforeUnloadListener();\n     \n   if(this.state.username){\n    //console.log(\"mount username state:\",this.state.username)\n      this.state.socket.emit(\"addUserToSocketObject\",{\n        username:this.state.username\n      })\n   }\n   this.state.socket.on(\"runerror\",(data)=>{\n    \n      if(data.message){\n        this.setState({\n          resultmsg:data.message,\n         \n        })\n      }\n   })\n   this.state.socket.on(\"incomingplayer\",(data)=>{\n    // console.log(data.opponentname)\n     this.setState({\n       opponentname:data.opponentname,\n       resultmsg:`Connected to ${data.opponentname},make your move`,\n       btnmsg:'DISCONNECT'\n     })\n   })\n   this.state.socket.on(\"playerdisconnected\",(data)=>{\n   //  console.log(data.message)\n     this.setState({\n       resultmsg:`${data.message},you won ${this.state.playswon} out of ${this.state.noofplays} series`,\n       btnmsg:'CONNECT',\n       opponentname:\"\",\n       playswon:0,\n       noofplays:0\n     })\n   })\n   this.state.socket.on(\"opponentmove\",(data)=>{\n   // console.log(data)\n    // this.setState({\n    //   resultmsg:'opponent have made the move,waiting'\n    // })\n    this.setState({\n      opponentmove:data.move\n\n    })\n    if(this.state.usermove){\n    //  console.log(\"called by opponenttrigger,this.statee.usermove is:\",this.state.usermove)\n      this.game(this.state.usermove)\n\n\n      this.setState({\n        usermove:\"\",\n        opponentmove:\"\",\n        \n      })\n      // if(this.state.playcounter===3){\n      //   if(this.state.scores[0].userscore>=2){\n      //     this.setState(\n      //       {\n      //         resultmsg:'YOU WON THE SERIES',\n      //         scores: [{ userscore: 0 }, { compscore: 0 }],\n      //         playcounter:0\n      //       }\n      //     )\n      //   }\n      //   else if(this.state.scores[1].compscore>=2){\n      //     this.setState({\n      //       resultmsg:'YOU LOST THE SERIES',\n      //       scores: [{ userscore: 0 }, { compscore: 0 }],\n      //       playcounter:0\n      //     })\n      //   }\n      //   else{\n      //     this.setState({\n      //       resultmsg:'The series is a draw'\n      //     })\n      //   }\n      //  }\n    }\n    else{\n      this.setState({\n        resultmsg:`opponent have made the move,waiting for your move.`\n      })\n    }\n  })\n  }\n  componentWillUnmount(){\n    this.state.socket.emit(\"disconnectUserFromPlay\",{\n      username:this.state.username,\n      connectedplayername:this.state.opponentname\n    })\n  }\n  sendConnectreq=()=>{\n  //  console.log(\"connect request send\")\n    this.state.socket.emit(\"CheckAndConnectUserToPlayer\",{\n    \n      username:this.state.username\n    })\n    this.setState({\n      resultmsg:'waiting for players to connect..',\n     \n    })\n   \n  } \n  sendDisConnectreq=()=>{\n   // console.log(\"disconnect request send\")\n    this.state.socket.emit(\"disconnectUserFromPlay\",{\n      username:this.state.username,\n      connectedplayername:this.state.opponentname\n    })\n    this.setState({\n      btnmsg:'CONNECT'\n    })\n  }\n  getcomputerchoice = () => {\n    const choicearray = [\"rock\", \"paper\", \"scissor\"];\n    const choice = Math.floor(Math.random() * 3);\n    return choicearray[choice];\n  };\n  getimage = choice => {\n    if (choice === \"rock\") return rock;\n    else if (choice === \"paper\") return paper;\n    else if (choice === \"scissor\") return scissor;\n  };\n  win = (userchoice, computerchoice) => {\n    const images = this.state.images.map(image => {\n      if (image.id === userchoice) {\n        return { id: image.id, image: image.image, clicked: \"choice-green\" };\n      } else return image;\n    });\n\n    const currentuserscore = this.state.scores[0].userscore;\n    const currentcompscore = this.state.scores[1].compscore;\n    const scores = [\n      { userscore: currentuserscore + 1 },\n      { compscore: currentcompscore }\n    ];\n\n    const resultimages = [\n      { id: userchoice, image: this.getimage(userchoice) },\n      { id: computerchoice, image: this.getimage(computerchoice) }\n    ];\n    this.setState({\n      images,\n      resultimages,\n      scores\n    },()=>{\n      if(this.state.scores[0].userscore>=2){\n        const resultmsg = \"YOU WIN THE SERIES\";\n      this.setState({\n        playswon:this.state.playswon+1,\n        scores: [{ userscore: 0 }, { compscore: 0 }],\n        resultmsg,\n        noofplays:this.state.noofplays+1\n      });\n      }\n      else{\n        const resultmsg = \"YOU WIN\";\n      this.setState({\n        resultmsg\n        \n      });\n      }\n    })\n\n    \n    setTimeout(() => {\n      const images = this.state.images.map(image => {\n        if (image.clicked) {\n          return { id: image.id, image: image.image, clicked: false };\n        } else return image;\n      });\n      this.setState({\n        images\n      });\n      //console.log(images)\n    }, 400);\n   // console.log(\"you win\");\n  };\n  lose = (userchoice, computerchoice) => {\n    const images = this.state.images.map(image => {\n      if (image.id === userchoice) {\n        return { id: image.id, image: image.image, clicked: \"choice-red\" };\n      } else return image;\n    });\n\n    const currentuserscore = this.state.scores[0].userscore;\n    const currentcompscore = this.state.scores[1].compscore;\n    const scores = [\n      { userscore: currentuserscore },\n      { compscore: currentcompscore + 1 }\n    ];\n\n    const resultimages = [\n      { id: userchoice, image: this.getimage(userchoice) },\n      { id: computerchoice, image: this.getimage(computerchoice) }\n    ];\n    this.setState({\n      scores,\n      images,\n      resultimages,\n    },()=>{\n      if(this.state.scores[1].compscore>=2){\n        const resultmsg = \"YOU LOSE THE SERIES\";\n      this.setState({\n        noofplays:this.state.noofplays+1,\n        scores: [{ userscore: 0 }, { compscore: 0 }],\n        resultmsg\n      });\n      }\n      else{\n        //console.log(this.state.scores[1].compscore)\n        const resultmsg = \"YOU LOSE\";\n      this.setState({\n        resultmsg\n      });\n      }\n    })\n  \n\n\n    setTimeout(() => {\n      const images = this.state.images.map(image => {\n        if (image.clicked) {\n          return { id: image.id, image: image.image, clicked: false };\n        } else return image;\n      });\n      this.setState({\n        images\n      });\n    }, 400);\n   // console.log(\"you lose\");\n  };\n  draw = (userchoice, computerchoice) => {\n    //console.log(e.classList)\n    const images = this.state.images.map(image => {\n      if (image.id === userchoice) {\n        return { id: image.id, image: image.image, clicked: \"choice-grey\" };\n      } else return image;\n    });\n\n    const resultimages = [\n      { id: userchoice, image: this.getimage(userchoice) },\n      { id: computerchoice, image: this.getimage(computerchoice) }\n    ];\n    const resultmsg = \"ITS A DRAW\";\n    this.setState({\n      images,\n      resultimages,\n      resultmsg\n    });\n    setTimeout(() => {\n      const images = this.state.images.map(image => {\n        if (image.clicked) {\n          return { id: image.id, image: image.image, clicked: false };\n        } else return image;\n      });\n      this.setState({\n        images\n      });\n    }, 400);\n  //  console.log(\"draw\");\n  };\n  sendMoveAndGame = userchoice => {\n    \n    this.state.socket.emit(\"playermove\",{\n      from:this.state.username,\n      to:this.state.opponentname,\n      move:userchoice\n    })\n   //console.log(\"userchoice:\",userchoice)\n\n    this.setState({\n      usermove:userchoice,\n    })\n  //console.log(\"usermove after setstae\",this.state.usermove)\n    if(this.state.opponentmove){\n      this.game(userchoice)\n     // console.log(\"called by usertrigger,usermove:\",this.state.usermove)\n   \n\n      this.setState({\n        usermove:\"\",\n        opponentmove:\"\",\n  \n\n      })\n    //  if(this.state.playcounter===3){\n    //   if(this.state.scores[0].userscore>=2){\n    //     this.setState(\n    //       {\n    //         resultmsg:'YOU WON THE SERIES',\n    //         scores: [{ userscore: 0 }, { compscore: 0 }],\n    //         playcounter:0\n    //       }\n    //     )\n    //   }\n    //   else if(this.state.scores[1].compscore>=2){\n    //     this.setState({\n    //       resultmsg:'YOU LOST THE SERIES',\n    //       scores: [{ userscore: 0 }, { compscore: 0 }],\n    //       playcounter:0\n    //     })\n    //   }\n    //   else{\n    //     this.setState({\n    //       resultmsg:'The series is a draw'\n    //     })\n    //   }\n    //  }\n    // }\n  }\n    else{\n      this.setState({\n        resultmsg:`waiting for opponentmove`\n      })\n    }\n  }\n  game=(userchoice)=>{\n    var computerchoice = this.state.opponentmove\n   // console.log(\"usermove:\",this.state.usermove,userchoice,\"opponentmove:\",this.state.opponentmove,computerchoice)\n\n    switch (userchoice + computerchoice) {\n      case \"rockscissor\":\n      case \"scissorpaper\":\n      case \"paperrock\":\n        this.win(userchoice, computerchoice);\n        break;\n      case \"scissorrock\":\n      case \"paperscissor\":\n      case \"rockpaper\":\n        this.lose(userchoice, computerchoice);\n        break;\n      default:\n        this.draw(userchoice, computerchoice);\n    }\n  }\n  render(){\n    this.setusername()\n    if(!this.state.username){\n     // console.log(\"mount username state:\",this.state.username)\n  \n      alert(\"please login to play multiplayer\");\n        return <Redirect to='/login' /> \n     }\n     else{\n    return (\n      \n      <div className=\"Multiplayer\">\n       \n       {this.state.opponentname?(<div>   \n         <Scoreboard scores={this.state.scores} opponentname={this.state.opponentname} username={this.state.username}/>\n        <Result\n          resultimages={this.state.resultimages}\n          resultmsg={this.state.resultmsg}\n        />\n        <Choices choices={this.state.images} connectionstatus={this.state.connectionstatus} game={this.sendMoveAndGame}  />\n        <Connectbtn sendConnectreq={this.sendConnectreq} socket={this.state.socket} sendDisConnectreq={this.sendDisConnectreq} btnmsg={this.state.btnmsg} />\n        </div>):(<div className=\"connectmsg\"><p>{this.state.resultmsg}</p><Connectbtn sendConnectreq={this.sendConnectreq} sendDisConnectreq={this.sendDisConnectreq} btnmsg={this.state.btnmsg} /></div>)}\n      </div>\n    );\n       }\n  }\n}\n\n\nexport default MApp;\n","import React,{Component} from 'react';\n\nclass Errormsg extends Component {\n  \n    render() { \n        return ( \n            <div className=\"errormsg\" >\n            <p>{this.props.errormsg}</p>\n            </div>\n         );\n    }\n}\n \nexport default Errormsg;\n","import React, { Component} from \"react\";\nimport Errormsg from \"./Errormsg\";\nimport Multiplayer from \"./Multiplayer\";\n//import { userContext } from \"../Contexts/UserContext\";\n//import { Redirect } from 'react-router-dom'\nclass Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    errormsg: \"\"\n  };\n\n  componentDidMount() {\n    // fetch(\"http://localhost:3000/users/login\", {\n    //   method: \"POST\",\n    //   credentials: 'include',\n    //   headers: {\n    //     Access: \"application/json\",\n    //     \"Content-Type\": \"application/json\"\n    //   },\n    //   body: JSON.stringify({\n    //     username: this.state.username,\n    //     password: this.state.password\n    //   })\n    // }).then(res=>{\n    //   res.json()\n    //   .then(json=>{\n    //     // if(json){\n    //     //   if(json.status===200){\n    //     //     this.props.history.push('/multiplayerplayer')\n    //     //   }\n    //     // }\n    //     console.log(json)\n    //   })\n    // })\n    console.log(\"mounted login\");\n  }\n  login = e => {\n    e.preventDefault();\n   // const { updateuser } = this.context;\n\n    fetch(\"/users/login\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        Access: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      })\n    }).then(res => {\n      res.json().then(json => {\n        if (json) {\n          console.log(json);\n          if (json.info) {\n            this.setState({\n              errormsg: json.info.message\n            });\n          } else if (json.user) {\n           this.props.setloggedinUser(json.user)\n           this.props.setlogstate('logout')\n           // return <Redirect to='/multiplayer' /> \n           this.props.history.push('/multiplayer')\n          }\n        }\n      });\n    });\n  };\n\n  render() {\n    const { user } = this.context;\n    if (!user) {\n      return (\n        <div className=\"login\">\n          <form onSubmit={this.login}>\n            <div className=\"container\">\n              <label htmlFor=\"uname\">\n                <b>Username</b>\n              </label>\n              <input\n                type=\"text\"\n                value={this.state.username}\n                placeholder=\"Enter Username\"\n                name=\"uname\"\n                required\n                onChange={e => {\n                  this.setState({ username: e.target.value });\n                }}\n              />\n\n              <label htmlFor=\"psw\">\n                <b>Password</b>\n              </label>\n              <input\n                type=\"password\"\n                value={this.state.password}\n                placeholder=\"Enter Password\"\n                name=\"psw\"\n                required\n                onChange={e => {\n                  this.setState({ password: e.target.value });\n                }}\n              />\n\n              <button type=\"submit\">Login</button>\n              {this.state.errormsg ? (\n                <Errormsg errormsg={this.state.errormsg} />\n              ) : (\n                \"\"\n              )}\n              <label>\n                <input type=\"checkbox\" name=\"remember\" /> Remember me\n              </label>\n            </div>\n\n            <div className=\"container\">\n              <button\n                type=\"button\"\n                className=\"cancelbtn\"\n                onClick={() => {\n                  this.props.history.push(\"/singleplayer\");\n                }}\n              >\n                Cancel\n              </button>\n              <span className=\"psw\">\n                <a href=\"gttg\">Forgot password?</a>\n              </span>\n            </div>\n          </form>\n        </div>\n      );\n    } else {\n      return <Multiplayer />;\n    }\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport Errormsg from \"./Errormsg\";\n//import {useHistory} from \"react-router-dom\"\nclass Signup extends Component {\n  state = {\n    username: \"\",\n    name: \"\",\n    password: \"\",\n    email: \"\",\n    errors: {\n      name: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    }\n  };\n  handleChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    const errors = this.state.errors;\n\n    switch (name) {\n      case \"name\":\n        errors.name =\n          value.length < 5 ? \"name must be atleast 5 characters long\" : \"\";\n        break;\n      case \"username\":\n        errors.username = value.includes(\" \")\n          ? \"username must not contain white spaces\"\n          : \"\";\n        break;\n      case \"email\": //eslint-disable-next-line\n        errors.email = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i.test(\n          value\n        )\n          ? \"\"\n          : \"Enter a valid email address\";\n        break;\n      case \"password\":\n        errors.password =\n          value.length < 8 ? \"password must be 8 characters long\" : \"\";\n        break;\n      default:\n        break;\n    }\n    this.setState({ errors, [name]: value });\n  };\n  validateForm = errors => {\n    let valid = true;\n    Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n    return valid;\n  };\n\n  handleSubmit = e => {\n    const { username, name, password, email } = this.state;\n    e.preventDefault();\n    console.log(this.state);\n    if (this.validateForm(this.state.errors)) {\n      fetch(\"/users/signup\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: name,\n          password: password,\n          username: username,\n          email: email\n        })\n      })\n        .then(res => {\n          res.json().then(json => {\n            if (json.msg === \"success\") {\n              console.log(\"sdss\");\n              this.props.history.push(\"/singleplayer\");\n              return false;\n            }\n\n            if (json.errors.email) {\n              const errors = this.state.errors;\n              errors.email = json.errors.email;\n              this.setState({\n                errors\n              });\n            }\n            if (json.errors.username) {\n              const errors = this.state.errors;\n              errors.username = json.errors.username;\n              this.setState({\n                errors\n              });\n            }\n          });\n        })\n        .catch(err => console.log(err));\n    } else {\n      return false;\n    }\n  };\n  render() {\n    const { errors } = this.state;\n    //console.log(errors)\n    return (\n      <div className=\"signup\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"container\">\n            <h3>SIGNUP</h3>\n            <label htmlFor=\"uname\">\n              <b>Username</b>\n              <br></br>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Enter Username\"\n              name=\"username\"\n              required\n              onChange={e => {\n                this.handleChange(e);\n              }}\n            />\n            {errors.username.length > 0 && (\n              <span className=\"error\">{errors.username}</span>\n            )}\n            <br></br>\n            <label htmlFor=\"name\">\n              <b>Name</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Enter Name\"\n              name=\"name\"\n              required\n              onChange={e => {\n                this.handleChange(e);\n              }}\n            />\n            {errors.name.length > 0 && (\n              <span className=\"error\">{errors.name}</span>\n            )}\n            <br></br>\n            <label htmlFor=\"email\">\n              <b>Email</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Enter Email\"\n              name=\"email\"\n              required\n              onChange={e => {\n                this.handleChange(e);\n              }}\n            />\n            {errors.email.length > 0 && (\n              <span className=\"error\">{errors.email}</span>\n            )}\n            <br></br>\n            <label htmlFor=\"psw\">\n              <b>Password</b>\n            </label>\n            <input\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              name=\"password\"\n              required\n              onChange={e => {\n                this.handleChange(e);\n              }}\n            />\n            {errors.password.length > 0 && (\n              <span className=\"error\">{errors.password}</span>\n            )}\n\n            <button type=\"submit\">Signup</button>\n          </div>\n          {this.state.errormsg\n            ? this.state.errormsg.map(error => {\n                return <Errormsg errormsg={error} key={Math.random() * 10} />;\n              })\n            : \"\"}\n          <div className=\"container\">\n            <button\n              type=\"button\"\n              className=\"cancelbtn\"\n              onClick={() => {\n                this.props.history.push(\"/singleplayer\");\n              }}\n            >\n              Cancel\n            </button>\n            <span className=\"psw\">                        \n              <a href=\"sdfsd\">Already have an account?,login</a>\n            </span>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React from 'react';\n//import { userContext } from \"../Contexts/UserContext\";\n\nclass Logout extends React.Component {\n\n    componentDidMount(){\n       \n        fetch(\"/users/logout\", {\n            \n            credentials: 'include',\n            headers: {\n              Access: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            },\n            // body: JSON.stringify({\n            //   username: this.state.username,\n            //   password: this.state.password\n            // })\n          }).then(res=>{\n              res.json()\n              .then(json=>{\n                  if(json){\n                      if(json.info===\"loggedout\"){\n                          console.log(\"logedout\")\n                          this.props.setloggedinUser(null)\n                       this.props.setlogstate('login')\n                       this.props.history.push('./singleplayer')\n                      }\n                  }\n              })\n          })\n    }\n    render() { \n       \n        return ( \n            <p>logging out</p>\n         );\n    }\n}\n \nexport default Logout;","import React, { useState,useEffect } from 'react';\n//import Home from './Components/Home';\nimport Navbar from \"./Components/Navbar\"\nimport {BrowserRouter,Route,Switch} from \"react-router-dom\"\nimport SApp from './Components/SinglePlayer';\nimport MApp from './Components/Multiplayer'\nimport Login from \"./Components/Login\"\nimport Signup from './Components/Signup';\nimport UserContextProvider from './Contexts/UserContext';\nimport Logout from './Components/Logout';\nfunction App() {\n  const [loggedinUser,setloggedinUser]=useState(null)\n  const [logstate,setlogstate]=useState('login')\n   useEffect(()=>{\n     console.log(\"app mounted\");\n     fetch(\"/users/login\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        Access: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      // body: JSON.stringify({\n      //   username: \"\",\n      //   password: \"\"\n      // })\n    }).then(res=>{\n      return res.json()\n    }).then(json=>{\n       if(json){\n         if(json.status===200){\n           console.log(json)\n           setloggedinUser(json.user)\n           console.log(\"set already logged in\")\n         \n           setlogstate('logout')\n         }\n       }\n    })\n   },[])\n  return (\n\n    <div className=\"App\">\n           \n          <BrowserRouter>\n          <UserContextProvider>\n          <Navbar logstate={logstate} />\n          <Switch>\n          <Route path=\"/singleplayer\" component={SApp}/>\n          <Route path=\"/login\" render={(props)=>(<Login {...props} loggedinUser={loggedinUser} setloggedinUser={setloggedinUser} logstate={logstate} setlogstate={setlogstate}/>)}/>\n          <Route path=\"/signup\" component={Signup}/>\n          <Route path=\"/logout\" render={(props)=>(<Logout {...props} setlogstate={setlogstate} setloggedinUser={setloggedinUser} />)}/>\n          <Route path=\"/multiplayer\" render={(props)=>(<MApp {...props} loggedinUser={loggedinUser?loggedinUser.username:null}/>)} />\n          </Switch>\n          </UserContextProvider>\n          </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}